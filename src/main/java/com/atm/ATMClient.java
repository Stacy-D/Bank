package com.atm;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.net.InetAddress;
import java.net.Socket;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Logger;

import javax.swing.*;

/**
 * ATM client for BankManager
 * @author Stacy
 *
 */
public class ATMClient {
	
	static class BankAccess extends Observable
	{
		private static final Logger LOG = Logger.getLogger(BankAccess.class.getName());
		public BankAccess(InetAddress addr, int port)
		{
			try {
		         socket = new Socket(addr,port); 
		         os = new PrintStream(socket.getOutputStream());
		         in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
		         
		         Thread receivingThread = new Thread(){
		        	 @Override
		        	 public void run()
		        	 {
		        		 try
		        		 {
		        			 String line;
		        			 while((line = in.readLine()) != null){
		        				 notifyObservers(line);
		        			 }

		        		 }
		        		 catch(IOException ex)
		        		 {
		        			 try {
			      		            socket.close();
			      		         }
			      		         catch (IOException e2) {
			      		            LOG.warning("Socket wasn`t closed");
			      		         }
		        		 }
		        	 }
		         };
		         receivingThread.start();
		         }
		      catch (IOException e) {
		         try {
		            socket.close();
		         }
		         catch (IOException e2) {
		            LOG.warning("Socket wasn`t closed");
		         }
		      }
		}
		
		@Override
		public void notifyObservers(Object arg)
		{
			super.setChanged();
			super.notifyObservers(arg);
		}
		public void getInfo(int cardNumber, String password)
		{
			String pass = EncryptPassword.encrypt(password);
			send("ATMGetinfo"+"CD"+cardNumber+ "PASS"+pass);
		}
		public void withdrawMoney(int cardNumber, String password,int withdraw)
		{
			String pass = EncryptPassword.encrypt(password);
			send("ATMWithdraw"+"CD"+cardNumber+ "PASS"+pass+"MINUS"+withdraw);
		}

		public void stopCommunication()
		{
			os.println("END_OF_SESSION");
			os.flush();
			try {
				socket.close();
			}
			catch (IOException e) {
				LOG.warning("Socket wasn`t closed");
			}
		}
		/**
		 * Send command to server and get it response
		 * @param command
		 */
		public void send(String command)
		{
			os.println(command);
			os.flush();
		}
		
		private BufferedReader in;
		private Socket socket;
		private PrintStream os;
	}

	static class ATM extends JFrame implements Observer {

	    /**
	     * Creates new form ATM
	     */
	    public ATM(BankAccess bank) {
	    	this.access = bank;
	    	this.access.addObserver(this);
	        initComponents();
	        jTabbedPane1.remove(Info);
	        
	    }

	    /**
	     * This method is called from within the constructor to initialize the form.
	     * WARNING: Do NOT modify this code. The content of this method is always
	     * regenerated by the Form Editor.
	     */
	    @SuppressWarnings("unchecked")
	    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
	    private void initComponents() {

	    	
	    	
	        jLabel1 = new JLabel();
	        jTabbedPane1 = new JTabbedPane();
	        Gate = new keyboardPanel(access, this);
	        jLabel2 = new JLabel();
	        jLabel3 = new JLabel();
	        Info = new JPanel();
	        hiText = new JLabel();
	        jLabel5 = new JLabel();
	        jLabel6 = new JLabel();
	        balanceText = new JLabel();
	        limitText = new JLabel();
	        performButton = new JButton();
	        endButton = new JButton();
	        jLabel9 = new JLabel();
	        withdrawField = new JTextField();
	        jMenuBar1 = new JMenuBar();
	        jMenu1 = new JMenu();
	        jMenuItem1 = new JMenuItem();

	        
	        
	        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

	        jLabel1.setFont(new java.awt.Font("Papyrus", 2, 18)); // NOI18N
	        jLabel1.setText("ATM");

	        jLabel2.setText("Card number");

	        jLabel3.setText("Password");

	        jTabbedPane1.add("Bank name",Gate);

	        Info.setBorder(BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

	        hiText.setText("Hi, Your name !");

	        jLabel5.setText("Limit");

	        jLabel6.setText("Balance");

	        balanceText.setText("1,000,000");

	        limitText.setText("150,000");

	        performButton.setText("Perform");
	        performButton.addActionListener(new java.awt.event.ActionListener() {
	            public void actionPerformed(java.awt.event.ActionEvent evt) {
	                performButtonActionPerformed(evt);
	            }
	        });

	        endButton.setText("End");
	        endButton.addActionListener(new java.awt.event.ActionListener() {
	            public void actionPerformed(java.awt.event.ActionEvent evt) {
	                endButtonActionPerformed(evt);
	            }
	        });

	        jLabel9.setText("Withdraw");

	        GroupLayout InfoLayout = new GroupLayout(Info);
	        Info.setLayout(InfoLayout);
	        InfoLayout.setHorizontalGroup(
	            InfoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
	            .addGroup(GroupLayout.Alignment.TRAILING, InfoLayout.createSequentialGroup()
	                .addGap(0, 0, Short.MAX_VALUE)
	                .addComponent(performButton))
	            .addGroup(InfoLayout.createSequentialGroup()
	                .addContainerGap()
	                .addGroup(InfoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
	                    .addGroup(InfoLayout.createSequentialGroup()
	                        .addGap(9, 9, 9)
	                        .addGroup(InfoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
	                            .addGroup(InfoLayout.createSequentialGroup()
	                                .addComponent(jLabel6, GroupLayout.PREFERRED_SIZE, 81, GroupLayout.PREFERRED_SIZE)
	                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
	                                .addComponent(balanceText, GroupLayout.PREFERRED_SIZE, 121, GroupLayout.PREFERRED_SIZE)
	                                .addGap(0, 40, Short.MAX_VALUE))
	                            .addGroup(InfoLayout.createSequentialGroup()
	                                .addComponent(jLabel5, GroupLayout.PREFERRED_SIZE, 81, GroupLayout.PREFERRED_SIZE)
	                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
	                                .addComponent(limitText, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
	                            .addGroup(InfoLayout.createSequentialGroup()
	                                .addComponent(jLabel9, GroupLayout.PREFERRED_SIZE, 93, GroupLayout.PREFERRED_SIZE)
	                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
	                                .addComponent(withdrawField))))
	                    .addGroup(InfoLayout.createSequentialGroup()
	                        .addGroup(InfoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
	                            .addComponent(hiText, GroupLayout.PREFERRED_SIZE, 114, GroupLayout.PREFERRED_SIZE)
	                            .addComponent(endButton))
	                        .addGap(0, 0, Short.MAX_VALUE)))
	                .addContainerGap())
	        );
	        InfoLayout.setVerticalGroup(
	            InfoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
	            .addGroup(InfoLayout.createSequentialGroup()
	                .addContainerGap()
	                .addComponent(hiText, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)
	                .addGap(24, 24, 24)
	                .addGroup(InfoLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
	                    .addComponent(jLabel6, GroupLayout.PREFERRED_SIZE, 26, GroupLayout.PREFERRED_SIZE)
	                    .addComponent(balanceText))
	                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
	                .addGroup(InfoLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
	                    .addComponent(jLabel5, GroupLayout.PREFERRED_SIZE, 26, GroupLayout.PREFERRED_SIZE)
	                    .addComponent(limitText))
	                .addGap(44, 44, 44)
	                .addGroup(InfoLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
	                    .addComponent(jLabel9, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE)
	                    .addComponent(withdrawField, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE))
	                .addGap(18, 18, 18)
	                .addComponent(performButton)
	                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
	                .addComponent(endButton)
	                .addContainerGap())
	        );

	        jTabbedPane1.addTab("BankName", Info);

	        jMenu1.setText("Action");

	        jMenuItem1.setText("Exit");
	        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
	            public void actionPerformed(java.awt.event.ActionEvent evt) {
	                jMenuItem1ActionPerformed(evt);
	            }
	        });
	        jMenu1.add(jMenuItem1);

	        jMenuBar1.add(jMenu1);

	        setJMenuBar(jMenuBar1);

	        GroupLayout layout = new GroupLayout(getContentPane());
	        getContentPane().setLayout(layout);
	        layout.setHorizontalGroup(
	            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
	            .addGroup(layout.createSequentialGroup()
	                .addGap(20, 20, 20)
	                .addComponent(jTabbedPane1, GroupLayout.PREFERRED_SIZE, 292, GroupLayout.PREFERRED_SIZE)
	                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
	            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
	                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
	                .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 124, GroupLayout.PREFERRED_SIZE)
	                .addGap(55, 55, 55))
	        );
	        layout.setVerticalGroup(
	            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
	            .addGroup(layout.createSequentialGroup()
	                .addContainerGap()
	                .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE)
	                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
	                .addComponent(jTabbedPane1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
	                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
	        );

	        pack();
	    }// </editor-fold>                        
                                                                                

	    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
	    	access.stopCommunication();
	    	dispose();
	    }                                          

	    private void performButtonActionPerformed(java.awt.event.ActionEvent evt) {                                              
	    	try
			{
				int moneySum = Integer.valueOf(withdrawField.getText());
				withdrawField.setText("");
				if(moneySum == 0) return;
				access.withdrawMoney(card, password, moneySum);
				access.getInfo(card, password);
			}
			catch(Exception ex)
			{
				 JOptionPane.showMessageDialog(null, "Field must contain only numbers");
			}	
			
	    }                                             

	    private void endButtonActionPerformed(java.awt.event.ActionEvent evt) {                                          
	    	password ="";
	    	card = -1;
	    	
	    	jTabbedPane1.remove(Info);
	    	Gate = new keyboardPanel(access, this);
	    	jTabbedPane1.add("Bank name",Gate);
	    }                                         


	    // Variables declaration - do not modify   
	    public String password;
	    public int card;
	    private BankAccess access;
	    private keyboardPanel Gate;
	    private JPanel Info;
	    private JLabel balanceText;
	    private JButton endButton;
	    private JLabel hiText;
	    private JLabel jLabel1;
	    private JLabel jLabel2;
	    private JLabel jLabel3;
	    private JLabel jLabel5;
	    private JLabel jLabel6;
	    private JLabel jLabel9;
	    private JMenu jMenu1;
	    private JMenuBar jMenuBar1;
	    private JMenuItem jMenuItem1;
	    private JTabbedPane jTabbedPane1;
	    private JLabel limitText;
	    private JButton performButton;
	    private JTextField withdrawField;
	    // End of variables declaration                   
		@Override
		public void update(Observable o, Object arg) {
			final String args = arg.toString();
			if(args.startsWith("RESPGetinfo"))
			{
				if(args.contains("OK"))
				{
					hiText.setText("Hi, "+args.substring(args.indexOf("NM")+2,args.indexOf("BAL"))+"!");
					balanceText.setText(args.substring(args.indexOf("BAL")+3, args.indexOf("LIM")));
					limitText.setText(args.substring(args.indexOf("LIM")+3));
					jTabbedPane1.add("Your account", Info);
					jTabbedPane1.remove(Gate);
				}
				else
				{
			    	jTabbedPane1.remove(Gate);
					Gate = new keyboardPanel(access, this);
			    	jTabbedPane1.add("Bank name",Gate);
					JOptionPane.showMessageDialog(null, "Something went wrong\n"
							+ "Possible reasons:\n"
							+ "- No such a client into database\n"
							+ "- Wrong password");
				}
			}
			else if(args.startsWith("RESPWithdraw"))
			{
				if(args.contains("OK"))
				{
					JOptionPane.showMessageDialog(null, "Money was withdrawed from your account");
					
				}
				else if(args.contains("F"))
				{
					JOptionPane.showMessageDialog(null, "Problems occured while withdrawing money from client account \n"
							+ "Possible reasons:\n"
							+ "- Client is absent in database\n"
							+ "- Wrong password\n"
							+ "- You can`t exceed limit of 150,000");
				}
			}
			
		}
	}
	
	static class keyboardPanel extends javax.swing.JPanel {

		BankAccess access;
		ATM atm;
		
	    /** Creates new form keyboardPanel 
	     * @param atm */
	    public keyboardPanel(BankAccess bank, ATM atm) {
	    	this.access = bank;
	    	this.atm = atm;
	        initComponents();
	    }

	    /** This method is called from within the constructor to
	     * initialize the form.
	     * WARNING: Do NOT modify this code. The content of this method is
	     * always regenerated by the Form Editor.
	     */
	    @SuppressWarnings("unchecked")
	    private void initComponents() {

	        jPanel1 = new javax.swing.JPanel();
	        keyboard1 = new javax.swing.JButton();
	        keyboard3 = new javax.swing.JButton();
	        keyboard2 = new javax.swing.JButton();
	        keyboard6 = new javax.swing.JButton();
	        keyboard5 = new javax.swing.JButton();
	        keyboard4 = new javax.swing.JButton();
	        keyboard9 = new javax.swing.JButton();
	        keyboard8 = new javax.swing.JButton();
	        keyboard7 = new javax.swing.JButton();
	        keyboardEnter = new javax.swing.JButton();
	        keyboard0 = new javax.swing.JButton();
	        keyboardCancel = new javax.swing.JButton();
	        labelMessage = new javax.swing.JLabel();
	        labelUserInput = new javax.swing.JLabel();

	        keyboard1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
	        keyboard1.setText("1");
	        keyboard1.setToolTipText("");
	        keyboard1.addActionListener(new java.awt.event.ActionListener() {
	            public void actionPerformed(java.awt.event.ActionEvent evt) {
	                keyboard1ActionPerformed(evt);
	            }
	        });

	        keyboard3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
	        keyboard3.setText("3");
	        keyboard3.setToolTipText("");
	        keyboard3.addActionListener(new java.awt.event.ActionListener() {
	            public void actionPerformed(java.awt.event.ActionEvent evt) {
	                keyboard3ActionPerformed(evt);
	            }
	        });

	        keyboard2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
	        keyboard2.setText("2");
	        keyboard2.setToolTipText("");
	        keyboard2.addActionListener(new java.awt.event.ActionListener() {
	            public void actionPerformed(java.awt.event.ActionEvent evt) {
	                keyboard2ActionPerformed(evt);
	            }
	        });

	        keyboard6.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
	        keyboard6.setText("6");
	        keyboard6.setToolTipText("");
	        keyboard6.addActionListener(new java.awt.event.ActionListener() {
	            public void actionPerformed(java.awt.event.ActionEvent evt) {
	                keyboard6ActionPerformed(evt);
	            }
	        });

	        keyboard5.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
	        keyboard5.setText("5");
	        keyboard5.setToolTipText("");
	        keyboard5.addActionListener(new java.awt.event.ActionListener() {
	            public void actionPerformed(java.awt.event.ActionEvent evt) {
	                keyboard5ActionPerformed(evt);
	            }
	        });

	        keyboard4.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
	        keyboard4.setText("4");
	        keyboard4.setToolTipText("");
	        keyboard4.addActionListener(new java.awt.event.ActionListener() {
	            public void actionPerformed(java.awt.event.ActionEvent evt) {
	                keyboard4ActionPerformed(evt);
	            }
	        });

	        keyboard9.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
	        keyboard9.setText("9");
	        keyboard9.setToolTipText("");
	        keyboard9.addActionListener(new java.awt.event.ActionListener() {
	            public void actionPerformed(java.awt.event.ActionEvent evt) {
	                keyboard9ActionPerformed(evt);
	            }
	        });

	        keyboard8.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
	        keyboard8.setText("8");
	        keyboard8.setToolTipText("");
	        keyboard8.addActionListener(new java.awt.event.ActionListener() {
	            public void actionPerformed(java.awt.event.ActionEvent evt) {
	                keyboard8ActionPerformed(evt);
	            }
	        });

	        keyboard7.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
	        keyboard7.setText("7");
	        keyboard7.setToolTipText("");
	        keyboard7.addActionListener(new java.awt.event.ActionListener() {
	            public void actionPerformed(java.awt.event.ActionEvent evt) {
	                keyboard7ActionPerformed(evt);
	            }
	        });

	        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
	        jPanel1.setLayout(jPanel1Layout);
	        jPanel1Layout.setHorizontalGroup(
	            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
	                .addGroup(jPanel1Layout.createSequentialGroup()
	                    .addComponent(keyboard4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
	                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
	                    .addComponent(keyboard5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
	                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
	                    .addComponent(keyboard6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
	                .addGroup(jPanel1Layout.createSequentialGroup()
	                    .addComponent(keyboard1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
	                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
	                    .addComponent(keyboard2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
	                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
	                    .addComponent(keyboard3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
	            .addGroup(jPanel1Layout.createSequentialGroup()
	                .addComponent(keyboard7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
	                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
	                .addComponent(keyboard8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
	                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
	                .addComponent(keyboard9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
	        );
	        jPanel1Layout.setVerticalGroup(
	            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	            .addGroup(jPanel1Layout.createSequentialGroup()
	                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
	                    .addComponent(keyboard1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
	                    .addComponent(keyboard2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
	                    .addComponent(keyboard3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
	                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
	                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
	                    .addComponent(keyboard4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
	                    .addComponent(keyboard5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
	                    .addComponent(keyboard6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
	                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
	                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
	                    .addComponent(keyboard7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
	                    .addComponent(keyboard8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
	                    .addComponent(keyboard9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
	        );

	        keyboardEnter.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
	        keyboardEnter.setText(">");
	        keyboardEnter.setToolTipText("");
	        keyboardEnter.addActionListener(new java.awt.event.ActionListener() {
	            public void actionPerformed(java.awt.event.ActionEvent evt) {
	                keyboardEnterActionPerformed(evt);
	            }
	        });

	        keyboard0.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
	        keyboard0.setText("0");
	        keyboard0.setToolTipText("");
	        keyboard0.addActionListener(new java.awt.event.ActionListener() {
	            public void actionPerformed(java.awt.event.ActionEvent evt) {
	                keyboard0ActionPerformed(evt);
	            }
	        });

	        keyboardCancel.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
	        keyboardCancel.setText("C");
	        keyboardCancel.setToolTipText("");
	        keyboardCancel.addActionListener(new java.awt.event.ActionListener() {
	            public void actionPerformed(java.awt.event.ActionEvent evt) {
	                keyboardCancelActionPerformed(evt);
	            }
	        });

	        labelMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
	        labelMessage.setText("Enter your card number and press '>'");

	        labelUserInput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

	        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
	        this.setLayout(layout);
	        layout.setHorizontalGroup(
	            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	            .addGroup(layout.createSequentialGroup()
	                .addGap(57, 57, 57)
	                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
	                    .addGroup(layout.createSequentialGroup()
	                        .addComponent(keyboardEnter, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
	                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
	                        .addComponent(keyboard0, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
	                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
	                        .addComponent(keyboardCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
	                .addContainerGap(60, Short.MAX_VALUE))
	            .addComponent(labelMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
	            .addComponent(labelUserInput, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
	        );
	        layout.setVerticalGroup(
	            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
	                .addGap(37, 37, 37)
	                .addComponent(labelMessage)
	                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
	                .addComponent(labelUserInput, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
	                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
	                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
	                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
	                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
	                    .addComponent(keyboardEnter, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
	                    .addComponent(keyboard0, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
	                    .addComponent(keyboardCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
	        );
	    }// </editor-fold>

	private void keyboard1ActionPerformed(java.awt.event.ActionEvent evt) {
		labelUserInput.setText(labelUserInput.getText()+"1");
	}

	private void keyboard3ActionPerformed(java.awt.event.ActionEvent evt) {
		labelUserInput.setText(labelUserInput.getText()+"3");
	}

	private void keyboard2ActionPerformed(java.awt.event.ActionEvent evt) {
		labelUserInput.setText(labelUserInput.getText()+"2");
	}

	private void keyboard6ActionPerformed(java.awt.event.ActionEvent evt) {
		labelUserInput.setText(labelUserInput.getText()+"6");
	}

	private void keyboard5ActionPerformed(java.awt.event.ActionEvent evt) {
		labelUserInput.setText(labelUserInput.getText()+"5");
	}

	private void keyboard4ActionPerformed(java.awt.event.ActionEvent evt) {
		labelUserInput.setText(labelUserInput.getText()+"4");
	}

	private void keyboard9ActionPerformed(java.awt.event.ActionEvent evt) {
		labelUserInput.setText(labelUserInput.getText()+"9");
	}

	private void keyboard8ActionPerformed(java.awt.event.ActionEvent evt) {
		labelUserInput.setText(labelUserInput.getText()+"8");
	}

	private void keyboard7ActionPerformed(java.awt.event.ActionEvent evt) {
		labelUserInput.setText(labelUserInput.getText()+"7");
	}

	private void keyboardEnterActionPerformed(java.awt.event.ActionEvent evt) {
		if (status==0 && !labelUserInput.getText().equals("")) {
			status++;
			labelMessage.setText("Please enter your pin-code and press '>'");
			cardN = labelUserInput.getText();
		} else if (!labelUserInput.getText().equals("")){
		       String pass = labelUserInput.getText();
		       try
		       {
		    	   int cardNumber = Integer.valueOf(cardN);
		    	   access.getInfo(cardNumber, pass);
		    	   atm.card = cardNumber;
		    	   atm.password = pass;
		       }
		       catch(Exception e)
		       {
		    	   e.printStackTrace();
		    	   //JOptionPane.showMessageDialog(null, "Field card number must contain only numbers");
		       }
		}
		labelUserInput.setText("");
	}

	private void keyboard0ActionPerformed(java.awt.event.ActionEvent evt) {
		labelUserInput.setText(labelUserInput.getText()+"0");
	}

	private void keyboardCancelActionPerformed(java.awt.event.ActionEvent evt) {
		if (status==1 && labelUserInput.getText().equals("")) {
			status--;
			labelMessage.setText("Enter your card number and press '>'");
		}
		labelUserInput.setText("");
	}

	    private int status = 0;
	    private String cardN;
	    private javax.swing.JPanel jPanel1;
	    private javax.swing.JButton keyboard0;
	    private javax.swing.JButton keyboard1;
	    private javax.swing.JButton keyboard2;
	    private javax.swing.JButton keyboard3;
	    private javax.swing.JButton keyboard4;
	    private javax.swing.JButton keyboard5;
	    private javax.swing.JButton keyboard6;
	    private javax.swing.JButton keyboard7;
	    private javax.swing.JButton keyboard8;
	    private javax.swing.JButton keyboard9;
	    private javax.swing.JButton keyboardCancel;
	    private javax.swing.JButton keyboardEnter;
	    private javax.swing.JLabel labelMessage;
	    private javax.swing.JLabel labelUserInput;
	    // End of variables declaration
	}
	
	public static void startBankAccess(InetAddress addr, int port)
	{
		final int fport = port;
		final BankAccess  access = new BankAccess(addr, port);
		 java.awt.EventQueue.invokeLater(new Runnable() {
	            public void run() {
		JFrame frame = new ATM(access);
		frame.setTitle("Connected to BankManager at port: "+fport);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.pack();
		frame.setLocationRelativeTo(null);
		frame.setResizable(false);
		frame.setVisible(true);
	            }
		 });
	}

}
