package com.atm;

import java.net.*;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Logger;
import java.awt.event.*;
import java.io.*;

import javax.swing.*;
/**
 * 
 * @author Stacy
 *
 */
public class JabberClientThread  {
	private static final Logger LOG = Logger.getLogger(JabberClientThread.class.getName());
	public static void startBankAccess(InetAddress addr, int port)
	{
		final int fport = port;
	
		final BankAccess  access = new BankAccess(addr, port);
		 java.awt.EventQueue.invokeLater(new Runnable() {
	            public void run() {
		JFrame frame = new BankBranch(access);
		frame.setTitle("Connected to BankManager at port: "+fport);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.pack();
		frame.setLocationRelativeTo(null);
		frame.setResizable(false);
		frame.setVisible(true);
	            }
		 });
	}

	
	
	static class BankAccess extends Observable{
		public BankAccess(InetAddress addr, int port)
		{
			try {
		         socket = new Socket(addr,port); 
		         os = new PrintStream(socket.getOutputStream());
		         in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
		         Thread receivingThread = new Thread(){
		        	 @Override
		        	 public void run()
		        	 {
		        		 try
		        		 {
		        			 String line;
		        			 while((line = in.readLine()) != null){
		        				 notifyObservers(line);
		        			 }

		        		 }
		        		 catch(IOException ex)
		        		 {
		        			 try {
			      		            socket.close();
			      		         }
			      		         catch (IOException e2) {
			      		            LOG.warning("Socket wasn`t closed");
			      		         }
		        		 }
		        	 }
		         };
		         receivingThread.start();
		         }
		      catch (IOException e) {
		         try {
		            socket.close();
		         }
		         catch (IOException e2) {
		            LOG.warning("Socket wasn`t closed");
		         }
		      }
		}
		
		@Override
		public void notifyObservers(Object arg)
		{
			super.setChanged();
			super.notifyObservers(arg);
		}
		public void addClient(String firstName, String lastName, String id, String password)
		{
			String pass = EncryptPassword.encrypt(password);
			send("Addclient"+"NM"+firstName+" "+ lastName + "ID"+id+"PASS"+pass);
	
		}
		public void getInfo(String lastName, String firstName, String password)
		{
			String pass = EncryptPassword.encrypt(password);
			send("Getinfo"+"NM"+firstName+" "+ lastName + "PASS"+pass);
		}
		public void addMoney(String lastName, String firstName, String password,int money)
		{
	   		String pass = EncryptPassword.encrypt(password);
	   		send("Addmoney"+"NM"+firstName+" "+ lastName + "PASS"+pass+"ADD"+money);
		}
		public void withdrawMoney(String lastName, String firstName, String password,int withdraw)
		{
			String pass = EncryptPassword.encrypt(password);
			send("Withdraw"+"NM"+firstName+" "+ lastName + "PASS"+pass+"MINUS"+withdraw);
		}
		public void removeClient(String lastName, String firstName, String password)
		{
			String pass = EncryptPassword.encrypt(password);
			send("Removeclient"+"NM"+firstName+" "+ lastName + "PASS"+pass);
		}
		public void stopCommunication()
		{
			os.println("END_OF_SESSION");
			os.flush();
			try {
				socket.close();
			}
			catch (IOException e) {
				LOG.warning("Socket wasn`t closed");
			}
		}
		/**
		 * Send command to server and get it response
		 * @param command
		 */
		public void send(String command)
		{
			os.println(command);
			os.flush();
		}
		
		private BufferedReader in;
		private Socket socket;
		private PrintStream os;
	}
	/**
	 * Frame of BankBranch
	 * @author Stacy
	 *
	 */
	static class BankBranch extends JFrame implements Observer {

	    /**
	     * Creates new form BankBranch
	     */
	    public BankBranch(BankAccess access) {
	    	this.bankAccess = access;
	    	this.bankAccess.addObserver(this);
	        initComponents();
	    }

	    /**
	     * This method is called from within the constructor to initialize the form.
	     * WARNING: Do NOT modify this code. The content of this method is always
	     * regenerated by the Form Editor.
	     */
	    @SuppressWarnings("unchecked")
	    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	    private void initComponents() {

	        jLabel1 = new JLabel();
	        jTabbedPane1 = new JTabbedPane();
	        addClient = new AddClient(bankAccess);
	        specificClient1 = new SpecificClient(bankAccess);
	        exitButton = new JButton();
	        jMenuBar1 = new JMenuBar();
	        jMenu1 = new JMenu();
	        jMenuItem2 = new JMenuItem();
	        jMenu2 = new JMenu();
	        jMenuItem1 = new JMenuItem();
	        jMenuItem3 = new JMenuItem();
	        jMenuItem4 = new JMenuItem();

	        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

	        jLabel1.setFont(new java.awt.Font("Apple Chancery", 3, 18)); // NOI18N
	        jLabel1.setText("Main office");

	        jTabbedPane1.addTab("Add client", addClient);
	        jTabbedPane1.addTab("Client Profile", specificClient1);

	        exitButton.setText("Exit");

	        jMenu1.setText("File");

	        jMenuItem2.setText("Exit");
	        jMenu1.add(jMenuItem2);

	        jMenuBar1.add(jMenu1);

	        jMenu2.setText("Clients");

	        jMenuItem1.setText("Add client");
	        jMenu2.add(jMenuItem1);

	        jMenuItem3.setText("Show clients");
	        jMenu2.add(jMenuItem3);

	        jMenuItem4.setText("Operations");
	        jMenu2.add(jMenuItem4);

	        jMenuBar1.add(jMenu2);

	        setJMenuBar(jMenuBar1);
	        exitButton.addActionListener(new ActionListener(){

				@Override
				public void actionPerformed(ActionEvent e) {
					bankAccess.stopCommunication();
				dispose();
				}});

	        GroupLayout layout = new GroupLayout(getContentPane());
	        getContentPane().setLayout(layout);
	        layout.setHorizontalGroup(
	            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
	            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
	                .addContainerGap()
	                .addComponent(jTabbedPane1, GroupLayout.PREFERRED_SIZE, 501, GroupLayout.PREFERRED_SIZE)
	                .addGap(18, 18, 18)
	                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
	                    .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 95, GroupLayout.PREFERRED_SIZE)
	                    .addComponent(exitButton, GroupLayout.PREFERRED_SIZE, 85, GroupLayout.PREFERRED_SIZE))
	                .addContainerGap())
	        );
	        layout.setVerticalGroup(
	            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
	            .addGroup(layout.createSequentialGroup()
	                .addContainerGap()
	                .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE)
	                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 262, Short.MAX_VALUE)
	                .addComponent(exitButton, GroupLayout.PREFERRED_SIZE, 73, GroupLayout.PREFERRED_SIZE)
	                .addGap(19, 19, 19))
	            .addGroup(layout.createSequentialGroup()
	                .addComponent(jTabbedPane1, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
	                .addContainerGap())
	        );

	        pack();
	    }// </editor-fold>//GEN-END:initComponents
	  

	    // Variables declaration - do not modify//GEN-BEGIN:variables
	    private BankAccess bankAccess;
	    private AddClient addClient;
	    private JButton exitButton;
	    private JLabel jLabel1;
	    private JMenu jMenu1;
	    private JMenu jMenu2;
	    private JMenuBar jMenuBar1;
	    private JMenuItem jMenuItem1;
	    private JMenuItem jMenuItem2;
	    private JMenuItem jMenuItem3;
	    private JMenuItem jMenuItem4;
	    private JTabbedPane jTabbedPane1;
	    private SpecificClient specificClient1;
	    // End of variables declaration//GEN-END:variables
		@Override
		public void update(Observable o, Object arg) {
			final Object finalArg = arg;
	}
	}
	/**
	 * Add client panel
	 * @author Stacy
	 *
	 */
	static class AddClient extends JPanel implements Observer {

	    /**
	     * Creates new form AddClient
	     */
	    public AddClient(BankAccess access) {
	    	this.access = access;
	    	this.access.addObserver(this);
	        initComponents();
	        textCN.setVisible(false);
	        cardNumber.setVisible(false);
	    }

	    /**
	     * This method is called from within the constructor to initialize the form.
	     * WARNING: Do NOT modify this code. The content of this method is always
	     * regenerated by the Form Editor.
	     */
	    @SuppressWarnings("unchecked")
	    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	    private void initComponents() {

	        jLabel1 = new JLabel();
	        lastNField = new JTextField();
	        firstNField = new JTextField();
	        jLabel2 = new JLabel();
	        jLabel3 = new JLabel();
	        jLabel4 = new JLabel();
	        ID = new JTextField();
	        jLabel5 = new JLabel();
	        password = new JPasswordField();
	        registerButton = new JButton();
	        textCN = new JLabel();
	        cardNumber = new JLabel();

	        jLabel1.setFont(new java.awt.Font("Lucida Sans Typewriter", 3, 14)); // NOI18N
	        jLabel1.setText("Add Client");

	        jLabel2.setText("First name");

	        jLabel3.setText("Last name");

	        jLabel4.setText("ID");

	        jLabel5.setText("Password");

	        registerButton.setText("Register");

	        textCN.setText("Card number");

	        cardNumber.setText("0000 0000 0000 0000");
	        registerButton.addActionListener(new ActionListener(){

				@Override
				public void actionPerformed(ActionEvent e) {
					String firstName = firstNField.getText();
					String lastName = lastNField.getText();
					String id = ID.getText();
					String pass = password.getText();
					firstNField.setText("");
					lastNField.setText("");
					ID.setText("");
					password.setText("");
					if(firstName.equals("")||lastName.equals("")||id.equals("")||pass.equals(""))
					{
						JOptionPane.showMessageDialog(null, "Some fields are empty");
						return;
					}
					access.addClient(firstName, lastName, id, pass);
				}});

	        GroupLayout layout = new GroupLayout(this);
	        this.setLayout(layout);
	        layout.setHorizontalGroup(
	            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
	            .addGroup(layout.createSequentialGroup()
	                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
	                    .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
	                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
	                        .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 105, GroupLayout.PREFERRED_SIZE))
	                    .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
	                        .addGap(0, 0, Short.MAX_VALUE)
	                        .addComponent(registerButton))
	                    .addGroup(layout.createSequentialGroup()
	                        .addGap(16, 16, 16)
	                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
	                            .addGroup(layout.createSequentialGroup()
	                                .addComponent(jLabel5, GroupLayout.PREFERRED_SIZE, 68, GroupLayout.PREFERRED_SIZE)
	                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
	                                .addComponent(password, GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE))
	                            .addGroup(layout.createSequentialGroup()
	                                .addComponent(jLabel4, GroupLayout.PREFERRED_SIZE, 68, GroupLayout.PREFERRED_SIZE)
	                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
	                                .addComponent(ID, GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE))
	                            .addGroup(layout.createSequentialGroup()
	                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
	                                    .addComponent(jLabel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
	                                    .addComponent(jLabel3, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 68, GroupLayout.PREFERRED_SIZE))
	                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
	                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
	                                    .addComponent(firstNField)
	                                    .addComponent(lastNField, GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)))
	                            .addGroup(layout.createSequentialGroup()
	                                .addComponent(textCN, GroupLayout.PREFERRED_SIZE, 91, GroupLayout.PREFERRED_SIZE)
	                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
	                                .addComponent(cardNumber, GroupLayout.PREFERRED_SIZE, 179, GroupLayout.PREFERRED_SIZE)
	                                .addGap(0, 0, Short.MAX_VALUE)))))
	                .addContainerGap())
	        );
	        layout.setVerticalGroup(
	            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
	            .addGroup(layout.createSequentialGroup()
	                .addContainerGap()
	                .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)
	                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
	                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
	                    .addGroup(layout.createSequentialGroup()
	                        .addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE)
	                        .addGap(15, 15, 15)
	                        .addComponent(jLabel3))
	                    .addGroup(layout.createSequentialGroup()
	                        .addComponent(firstNField, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)
	                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
	                        .addComponent(lastNField, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)))
	                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
	                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
	                    .addComponent(jLabel4)
	                    .addComponent(ID, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE))
	                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
	                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
	                    .addComponent(jLabel5)
	                    .addComponent(password, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE))
	                .addGap(18, 18, 18)
	                .addComponent(registerButton)
	                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
	                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
	                    .addComponent(textCN, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)
	                    .addComponent(cardNumber, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE))
	                .addContainerGap(38, Short.MAX_VALUE))
	        );
	    }



	    // Variables declaration - do not modify//GEN-BEGIN:variables
	    private BankAccess access;
	    private JTextField firstNField;
	    private JButton registerButton;
	    private JLabel jLabel1;
	    private JLabel jLabel2;
	    private JLabel jLabel3;
	    private JLabel jLabel4;
	    private JLabel jLabel5;
	    private JLabel textCN;
	    private JLabel cardNumber;
	    private JTextField lastNField;
	    private JTextField ID;
	    private JPasswordField password;
	    // End of variables declaration//GEN-END:variables
		@Override
		public void update(Observable o, Object arg) {
			final Object finalArg = arg;
			SwingUtilities.invokeLater(new Runnable(){

				@Override
				public void run() {
					if(finalArg != null)
					{
						if(finalArg.toString().startsWith("RESPAddclient"))
						{
							if(finalArg.toString().contains("OK"))
							{
								textCN.setVisible(true);
								cardNumber.setText(finalArg.toString().substring(finalArg.toString().indexOf("CARD")+4));
								cardNumber.setVisible(true);
								
							}
							else
							{
								JOptionPane.showMessageDialog(null, "Client can`t be added. Possible reasons:\n"
										+ "- Client is present in database\n"
										+ "- Some other reasons");
							}
						}
					}
				}});
			
		}
	}
	
	static class SpecificClient extends JPanel implements Observer {

	    /**
	     * Creates new form SpecificClient
	     */
	    public SpecificClient(BankAccess bank) {
	    	this.access = bank;
	    	this.access.addObserver(this);
	        initComponents();
	        this.jTabbedPane1.setVisible(false);
	    }

	    /**
	     * This method is called from within the constructor to initialize the form.
	     * WARNING: Do NOT modify this code. The content of this method is always
	     * regenerated by the Form Editor.
	     */
	    @SuppressWarnings("unchecked")
	    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	    private void initComponents() {

	        jLabel1 = new JLabel();
	        jLabel2 = new JLabel();
	        jLabel3 = new JLabel();
	        firstNField = new JTextField();
	        lastNField = new JTextField();
	        jLabel5 = new JLabel();
	        passField = new JPasswordField();
	        jButton1 = new JButton();
	        removeButto = new JButton();
	        jTabbedPane1 = new JTabbedPane();
	        jLabel1.setFont(new java.awt.Font("Malayalam MN", 3, 18)); // NOI18N
	        jLabel1.setText("Client Profile");

	        jLabel2.setFont(new java.awt.Font("Luminari", 0, 13)); // NOI18N
	        jLabel2.setText("First name");

	        jLabel3.setFont(new java.awt.Font("Luminari", 0, 13)); // NOI18N
	        jLabel3.setText("Last name");

	        jLabel5.setFont(new java.awt.Font("Luminari", 0, 13)); // NOI18N
	        jLabel5.setText("Password");

	        jButton1.setText("Get info");
	        firstNField.addActionListener(new ActionListener(){

				@Override
				public void actionPerformed(ActionEvent e) {
					jTabbedPane1.setVisible(false);
				}});
	        lastNField.addActionListener(new ActionListener(){

				@Override
				public void actionPerformed(ActionEvent e) {
					jTabbedPane1.setVisible(false);
				}});
	        passField.addActionListener(new ActionListener(){

				@Override
				public void actionPerformed(ActionEvent e) {
					jTabbedPane1.setVisible(false);
				}});
	        jButton1.addActionListener(new ActionListener(){

				@Override
				public void actionPerformed(ActionEvent e) {
				String firstName =  firstNField.getText();
				String lastName = lastNField.getText();
				String pass = passField.getText();
				if(firstName.equals("")||lastName.equals("")||pass.equals(""))
				{
					JOptionPane.showMessageDialog(null, "Some fields are empty");
					return;
				}
				if(withdrawPnl1 == null && addMoneyPanel2 == null && infoPanel1 == null)
				{
				withdrawPnl1 = new WithdrawPnl(access,pass, lastName,firstName);
				addMoneyPanel2 = new AddMoneyPanel(access,pass, lastName,firstName);
				infoPanel1 = new InfoPanel(access);
				jTabbedPane1.addTab("Withdraw", withdrawPnl1);
			    jTabbedPane1.addTab("Add", addMoneyPanel2);
		        jTabbedPane1.addTab("Info", infoPanel1);
		        }
				else
				{
					withdrawPnl1.setNewInfo(firstName, lastName, pass);
					addMoneyPanel2.setNewInfo(firstName, lastName, pass);
				}
				access.getInfo(lastName, firstName, pass);	
				}});

	        removeButto.setText("Remove");
	        removeButto.addActionListener(new ActionListener(){

				@Override
				public void actionPerformed(ActionEvent e) {
					String firstName =  firstNField.getText();
					String lastName = lastNField.getText();
					String pass = passField.getText();
					if(firstName.equals("")||lastName.equals("")||pass.equals(""))
					{
						JOptionPane.showMessageDialog(null, "Some fields are empty");
						return;
					}
					access.removeClient(lastName, firstName, pass);
					
				}});
	        
	        GroupLayout layout = new GroupLayout(this);
	        this.setLayout(layout);
	        layout.setHorizontalGroup(
	            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
	            .addGroup(layout.createSequentialGroup()
	                .addContainerGap()
	                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
	                    .addGroup(layout.createSequentialGroup()
	                        .addComponent(jLabel5, GroupLayout.PREFERRED_SIZE, 68, GroupLayout.PREFERRED_SIZE)
	                        .addGap(0, 341, Short.MAX_VALUE))
	                    .addGroup(layout.createSequentialGroup()
	                        .addComponent(removeButto, GroupLayout.PREFERRED_SIZE, 77, GroupLayout.PREFERRED_SIZE)
	                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
	                        .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 129, GroupLayout.PREFERRED_SIZE))
	                    .addGroup(layout.createSequentialGroup()
	                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
	                            .addComponent(jLabel3, GroupLayout.PREFERRED_SIZE, 68, GroupLayout.PREFERRED_SIZE)
	                            .addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 91, GroupLayout.PREFERRED_SIZE))
	                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
	                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
	                            .addComponent(jTabbedPane1, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
	                            .addGroup(layout.createSequentialGroup()
	                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
	                                    .addComponent(lastNField, GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
	                                    .addComponent(firstNField)
	                                    .addComponent(passField))
	                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
	                                .addComponent(jButton1)))))
	                .addContainerGap())
	        );
	        layout.setVerticalGroup(
	            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
	            .addGroup(layout.createSequentialGroup()
	                .addContainerGap()
	                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
	                    .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 35, GroupLayout.PREFERRED_SIZE)
	                    .addComponent(removeButto, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE))
	                .addGap(24, 24, 24)
	                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
	                    .addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE)
	                    .addComponent(firstNField, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)
	                    .addComponent(jButton1, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE))
	                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
	                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
	                    .addComponent(jLabel3)
	                    .addComponent(lastNField, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE))
	                .addGap(18, 18, 18)
	                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
	                    .addComponent(jLabel5)
	                    .addComponent(passField, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE))
	                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
	                .addComponent(jTabbedPane1, GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
	                .addContainerGap())
	        );
	    }// </editor-fold>//GEN-END:initComponents


	    // Variables declaration - do not modify//GEN-BEGIN:variables
	    private BankAccess access;
	    private AddMoneyPanel addMoneyPanel2;
	    private JTextField firstNField;
	    private InfoPanel infoPanel1;
	    private JButton jButton1;
	    private JButton removeButto;
	    private JLabel jLabel1;
	    private JLabel jLabel2;
	    private JLabel jLabel3;
	    private JLabel jLabel5;
	    private JTabbedPane jTabbedPane1;
	    private JTextField lastNField;
	    private JPasswordField passField;
	    private WithdrawPnl withdrawPnl1;
	    // End of variables declaration//GEN-END:variables
		@Override
		public void update(Observable o, Object arg) {
			final String finalArg = arg.toString();
			SwingUtilities.invokeLater(new Runnable(){

				@Override
				public void run() {
					if(finalArg != null)
					{
						if(finalArg.startsWith("RESPGetinfo"))
						{
							if(finalArg.contains("OK"))
							{
								jTabbedPane1.setVisible(true);
								
							}
							if(finalArg.contains("F"))
							{
								JOptionPane.showMessageDialog(null, "Something went wrong\n"
										+ "Possible reasons:\n"
										+ "- No such a client into database\n"
										+ "- Wrong password");
							}
						}
						else if(finalArg.startsWith("RESPRemoveclient"))
						{
							if(finalArg.contains("OK"))
							{
								JOptionPane.showMessageDialog(null, "Client was removed from BankManager");
								jTabbedPane1.setVisible(false);
								firstNField.setText("");
								lastNField.setText("");
								passField.setText("");
							}
							else
							{
								JOptionPane.showMessageDialog(null, "Client cannot be removed today");
							}
						}
					}
				}});
			
			
		}
	}
	

	static class WithdrawPnl extends JPanel implements Observer {

	    /**
	     * Creates new form WithdrawPnl
	     */
	    public WithdrawPnl(BankAccess bank,String password, String lN,String fN) {
	    	this.lastName = lN;
	    	this.firstName = fN;
	    	this.password = password;
	    	this.access = bank;
	    	this.access.addObserver(this);
	        initComponents();
	    }

	    /**
	     * This method is called from within the constructor to initialize the form.
	     * WARNING: Do NOT modify this code. The content of this method is always
	     * regenerated by the Form Editor.
	     */
	    @SuppressWarnings("unchecked")
	    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	    private void initComponents() {

	        withdrawButton = new JButton();
	        withdrawField = new JTextField();
	        jLabel1 = new JLabel();

	        setPreferredSize(new java.awt.Dimension(321, 119));

	        withdrawButton.setFont(new java.awt.Font("Luminari", 2, 13)); // NOI18N
	        withdrawButton.setText("Perform");
	        withdrawButton.addActionListener(new ActionListener(){

				@Override
				public void actionPerformed(ActionEvent e) {
					try
					{
						int moneySum = Integer.valueOf(withdrawField.getText());
						withdrawField.setText("");
						if(moneySum == 0) return;
						access.withdrawMoney(lastName, firstName, password, moneySum);
						access.getInfo(lastName, firstName, password);
					}
					catch(Exception ex)
					{
						 JOptionPane.showMessageDialog(null, "Field must contain only numbers");
					}	
					
				}});

	        jLabel1.setFont(new java.awt.Font("Luminari", 1, 14)); // NOI18N
	        jLabel1.setText("Withdraw    money");

	        GroupLayout layout = new GroupLayout(this);
	        this.setLayout(layout);
	        layout.setHorizontalGroup(
	            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
	            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
	                .addContainerGap()
	                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
	                    .addGroup(layout.createSequentialGroup()
	                        .addGap(0, 0, Short.MAX_VALUE)
	                        .addComponent(withdrawButton, GroupLayout.PREFERRED_SIZE, 104, GroupLayout.PREFERRED_SIZE))
	                    .addGroup(layout.createSequentialGroup()
	                        .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 125, GroupLayout.PREFERRED_SIZE)
	                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
	                        .addComponent(withdrawField, GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)))
	                .addContainerGap())
	        );
	        layout.setVerticalGroup(
	            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
	            .addGroup(layout.createSequentialGroup()
	                .addGap(28, 28, 28)
	                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
	                    .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 39, GroupLayout.PREFERRED_SIZE)
	                    .addComponent(withdrawField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
	                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
	                .addComponent(withdrawButton, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)
	                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
	        );
	    }

	    public void setNewInfo(String firstName,String lastName,String password)
	    {
	    	this.firstName = firstName;
	    	this.lastName = lastName;
	    	this.password = password;
	    }
	    private String firstName;
	    private String lastName;
	    private String password;
	    private JLabel jLabel1;
	    private BankAccess access;
	    private JButton withdrawButton;
	    private JTextField withdrawField;
	    // End of variables declaration//GEN-END:variables
		@Override
		public void update(Observable o, Object arg) {
			final Object finalArg = arg;
			SwingUtilities.invokeLater(new Runnable(){

				@Override
				public void run() {
					if(finalArg != null)
					{
						if(finalArg.toString().startsWith("RESPWithdraw"))
						{
							if(finalArg.toString().contains("OK"))
							{
								JOptionPane.showMessageDialog(null, "Money was withdrawed from your account");
								
							}
							else if(finalArg.toString().contains("F"))
							{
								JOptionPane.showMessageDialog(null, "Problems occured while withdrawing money from client account \n"
										+ "Possible reasons:\n"
										+ "- Client is absent in database\n"
										+ "- Wrong password\n"
										+ "- You can`t exceed limit of 150,000");
							}
						}
					}
				}});
		}
	}

	static class AddMoneyPanel extends JPanel implements Observer {

	    /**
	     * Creates new form AddMoneyPanel
	     */
	    public AddMoneyPanel(BankAccess bank,String password, String lN,String fN) {
	    	this.lastName = lN;
	    	this.firstName = fN;
	    	this.password = password;
	    	this.access = bank;
	    	this.access.addObserver(this);
	        initComponents();
	    }

	    /**
	     * This method is called from within the constructor to initialize the form.
	     * WARNING: Do NOT modify this code. The content of this method is always
	     * regenerated by the Form Editor.
	     */
	    @SuppressWarnings("unchecked")
	    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	    private void initComponents() {

	        jLabel1 = new JLabel();
	        addMoneyField = new JTextField();
	        addMoneyButton = new JButton();
	        addMoneyButton.addActionListener(new ActionListener(){

				@Override
				public void actionPerformed(ActionEvent e) {
					try
					{
						int moneySum = Integer.valueOf(addMoneyField.getText());
						addMoneyField.setText("");
						if(moneySum <= 0) return;
						access.addMoney(lastName, firstName, password, moneySum);
						access.getInfo(lastName, firstName, password);
					}
					catch(Exception ex)
					{
						 JOptionPane.showMessageDialog(null, "Field must contain only numbers");
					}
					
				}});
	        jLabel1.setFont(new java.awt.Font("Luminari", 1, 14)); // NOI18N
	        jLabel1.setText("Add money");

	        addMoneyButton.setFont(new java.awt.Font("Luminari", 2, 13)); // NOI18N
	        addMoneyButton.setText("Perform");

	        GroupLayout layout = new GroupLayout(this);
	        this.setLayout(layout);
	        layout.setHorizontalGroup(
	            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
	            .addGroup(layout.createSequentialGroup()
	                .addContainerGap()
	                .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 107, GroupLayout.PREFERRED_SIZE)
	                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
	                .addComponent(addMoneyField, GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
	                .addContainerGap())
	            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
	                .addGap(0, 0, Short.MAX_VALUE)
	                .addComponent(addMoneyButton, GroupLayout.PREFERRED_SIZE, 114, GroupLayout.PREFERRED_SIZE))
	        );
	        layout.setVerticalGroup(
	            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
	            .addGroup(layout.createSequentialGroup()
	                .addGap(28, 28, 28)
	                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
	                    .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
	                    .addComponent(addMoneyField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
	                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
	                .addComponent(addMoneyButton, GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
	        );
	    }// </editor-fold>//GEN-END:initComponents

	    public void setNewInfo(String firstName,String lastName,String password)
	    {
	    	this.firstName = firstName;
	    	this.lastName = lastName;
	    	this.password = password;
	    }
	    private String firstName;
	    private String lastName;
	    private String password;
	    // client info
	    private BankAccess access;
	    private JButton addMoneyButton;
	    private JTextField addMoneyField;
	    private JLabel jLabel1;
	    // End of variables declaration//GEN-END:variables
		@Override
		public void update(Observable o, Object arg) {
			final Object finalArg = arg;
			SwingUtilities.invokeLater(new Runnable(){
			

				@Override
				public void run() {
					if(finalArg != null)
					{
						if(finalArg.toString().startsWith("RESPAddmoney"))
						{
							if(finalArg.toString().contains("OK"))
							{
								JOptionPane.showMessageDialog(null, "Money was added to your account");
								
							}
							else if(finalArg.toString().contains("F"))
							{
								JOptionPane.showMessageDialog(null, "Problems occured while adding money to client account");
							}
						}
					}
				}});	
		}
	}
	/**
	 *
	 * @author Stacy
	 */
	static class InfoPanel extends javax.swing.JPanel implements Observer {

    /**
     * Creates new form InfoPanel
     */
    public InfoPanel(BankAccess bank) {
    	this.access = bank;
    	this.access.addObserver(this);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        balanceText = new javax.swing.JLabel();
        limitText = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Luminari", 1, 14)); // NOI18N
        jLabel1.setText("Balance");

        jLabel2.setFont(new java.awt.Font("Luminari", 1, 14)); // NOI18N
        jLabel2.setText("Limit");

        balanceText.setText("1,0000000000000");

        limitText.setText("1,0000000000000");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addComponent(limitText, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(balanceText, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(balanceText, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(limitText, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    private BankAccess access;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel balanceText;
    private javax.swing.JLabel limitText;
    // End of variables declaration//GEN-END:variables
	@Override
	public void update(Observable o, Object arg) {
		final String finalArg = arg.toString();
		SwingUtilities.invokeLater(new Runnable(){

			@Override
			public void run() {
				if(finalArg != null)
				{
					if(finalArg.toString().startsWith("RESPGetinfo"))
					{
						if(finalArg.toString().contains("OK"))
						{
							balanceText.setText(finalArg.substring(finalArg.indexOf("BAL")+3, finalArg.indexOf("LIM")));
							limitText.setText(finalArg.substring(finalArg.indexOf("LIM")+3));
						}
					}
				}
			}});
		
	}
}



}